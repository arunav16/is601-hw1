To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

arunav16@LenovoIP5:~$ git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
arunav16@LenovoIP5:~$ pwd
/home/arunav16
arunav16@LenovoIP5:~$ mkdir wsd
arunav16@LenovoIP5:~$ cd wsd
arunav16@LenovoIP5:~/wsd$ mkdir assgn1
arunav16@LenovoIP5:~/wsd$ cd assgn1
arunav16@LenovoIP5:~/wsd/assgn1$ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint:   git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint:   git branch -m <name>
Initialized empty Git repository in /home/arunav16/wsd/assgn1/.git/
arunav16@LenovoIP5:~/wsd/assgn1$ git config --global user.email "am3945@njit.edu"
arunav16@LenovoIP5:~/wsd/assgn1$ git config --global user.name "arunav16"
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)
arunav16@LenovoIP5:~/wsd/assgn1$ touch readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        readme.md

nothing added to commit but untracked files present (use "git add" to track)
arunav16@LenovoIP5:~/wsd/assgn1$ touch .gitignore
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        readme.md

nothing added to commit but untracked files present (use "git add" to track)
arunav16@LenovoIP5:~/wsd/assgn1$ git add .gitignore
arunav16@LenovoIP5:~/wsd/assgn1$ git commit -m "added a git ignore"
[master (root-commit) 21e3bf1] added a git ignore
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 .gitignore
arunav16@LenovoIP5:~/wsd/assgn1$ git add readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   readme.md

arunav16@LenovoIP5:~/wsd/assgn1$ git commit -m"added a readme"
[master 9de01b8] added a readme
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master
nothing to commit, working tree clean
arunav16@LenovoIP5:~/wsd/assgn1$ git log
commit 9de01b8b962b8c68cb50a18555834138ff4534b6 (HEAD -> master)
Author: arunav16 <am3945@njit.edu>
Date:   Mon Jan 27 20:22:57 2025 -0500

    added a readme

commit 21e3bf1d5224ea18f9b0da93e16f3c8a9ed92036
Author: arunav16 <am3945@njit.edu>
Date:   Mon Jan 27 20:22:15 2025 -0500

    added a git ignore
arunav16@LenovoIP5:~/wsd/assgn1$ vi readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ vi readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ vi readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ vi readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ vi readme.md
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch UpdateReadme
nothing to commit, working tree clean
arunav16@LenovoIP5:~/wsd/assgn1$ git checkout master
Switched to branch 'master'
arunav16@LenovoIP5:~/wsd/assgn1$ git status
On branch master
nothing to commit, working tree clean
